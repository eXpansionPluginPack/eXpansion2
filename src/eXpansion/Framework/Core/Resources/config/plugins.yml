services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: true

    #
    # Plugins for Graphical user interfaces.
    #
    eXpansion\Framework\Core\Plugins\GuiHandler:
        class: 'eXpansion\Framework\Core\Plugins\GuiHandler'
        tags:
            - {name: expansion.plugin, data_provider: exp.timer}
            - {name: expansion.plugin, data_provider: expansion.user_group}
            - {name: expansion.plugin, data_provider: mp.legacy.player}
    eXpansion\Framework\Core\Plugins\GuiHandlerInterface: '@eXpansion\Framework\Core\Plugins\GuiHandler'

    eXpansion\Framework\Core\Plugins\Gui\ActionFactory:
        class: 'eXpansion\Framework\Core\Plugins\Gui\ActionFactory'
        arguments:
            $class: "%expansion.framework.core.model.gui.action.class%"
        tags:
            - {name: expansion.plugin, data_provider: mp.legacy.manialink}

    #
    # Defining plugins to keep groups up to date. You normally never need these services.
    #
    eXpansion\Framework\Core\Plugins\UserGroups\AllPlayers:
        class: eXpansion\Framework\Core\Plugins\UserGroups\AllPlayers
        arguments:
            $userGroup: '@expansion.framework.core.user_groups.all_players'
        tags:
            - {name: expansion.plugin, data_provider: mp.legacy.player}

    eXpansion\Framework\Core\Plugins\UserGroups\Players:
        class: eXpansion\Framework\Core\Plugins\UserGroups\Players
        arguments:
            $userGroup: '@expansion.framework.core.user_groups.players'
        tags:
            - {name: expansion.plugin, data_provider: mp.legacy.player}

    eXpansion\Framework\Core\Plugins\UserGroups\Spectators:
        class: eXpansion\Framework\Core\Plugins\UserGroups\Spectators
        arguments:
           $userGroup: '@expansion.framework.core.user_groups.spectators'
        tags:
            - {name: expansion.plugin, data_provider: mp.legacy.player}

    eXpansion\Framework\Core\Plugins\ScriptAdapter:
        class: eXpansion\Framework\Core\Plugins\ScriptAdapter
        tags:
            - {name: expansion.plugin, data_provider: mp.legacy.script}

    #
    # Default Chat commands
    #
    expansion.framework.core.plugins.chat_commands:
        class: eXpansion\Framework\Core\Model\ChatCommand\ChatCommandPlugin
        arguments:
            -
              - '@eXpansion\Framework\Core\ChatCommand\Help'
              - '@eXpansion\Framework\Core\ChatCommand\StopExpansion'
              - '@eXpansion\Framework\Core\ChatCommand\RestartExpansion'
        tags:
            - {name: expansion.plugin, data_provider: expansion.chat_command_data}

    eXpansion\Framework\Core\ChatCommand\Help:
        class:  eXpansion\Framework\Core\ChatCommand\Help
        arguments:
            $command: 'help'
            $aliases: ['h']

    eXpansion\Framework\Core\ChatCommand\StopExpansion:
        class: eXpansion\Framework\Core\ChatCommand\StopExpansion
        arguments:
            $command: 'expansion stop'
            $aliases: []
            $permission: "admin"

    eXpansion\Framework\Core\ChatCommand\RestartExpansion:
        class: eXpansion\Framework\Core\ChatCommand\RestartExpansion
        arguments:
            $command: 'expansion restart'
            $aliases: []
            $permission: "admin"

    #
    # Plugin that displays information about expansion on start.
    #
    eXpansion\Framework\Core\Plugins\StartGreeter:
        class: 'eXpansion\Framework\Core\Plugins\StartGreeter'
        tags:
            - {name: expansion.plugin, data_provider: exp.application}

    #
    # Plugin to keep database connection persisting.
    #
    eXpansion\Framework\Core\Plugins\DatabaseConnectionPersist:
        class: 'eXpansion\Framework\Core\Plugins\DatabaseConnectionPersist'
        arguments:
            $pingInterval: 300 #Ping database every 5 minutes.
        tags:
            - {name: expansion.plugin, data_provider: exp.timer}
